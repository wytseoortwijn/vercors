// -*- tab-width:2 ; indent-tabs-mode:nil -*-
//:: case ParallelPVLExample1
//:: tools silicon
//:: suite rise4fun

/*
 * Testing the PVL parallel loop construct.
 */
class test {

  void main(){
    int[10] x=new int[10];
    int[10] y=new int[10];
    int[10] z=new int[10];
		
    context_everywhere x != null ** y != null ** z != null;
		context_everywhere x.length == 10 && y.length == 10 && z.length == 10;
    context (\forall* int i;0<=i && i < 10 ; Perm(x[i],1));
    context (\forall* int i;0<=i && i < 10 ; Perm(y[i],1));
    context (\forall* int i;0<=i && i < 10 ; Perm(z[i],1));
    par fst_(int i=0..10)
      context Perm(x[i],1) ** Perm(z[i],1/20);
    {
      x[i]=z[i];
      x[i]=0;
    } and snd_(int j=0..10;fst_(j)) // fst_(*)
      context Perm(y[j],1);
    {
      y[j]=0;
    } and trd_(int k=0..10;snd_(k)) // snd_(k)
      context Perm(z[k],1) ** Perm(y[k],1/2);
    {
      z[k]=y[k];
    }
  }
  
}

