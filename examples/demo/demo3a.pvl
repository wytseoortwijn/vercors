// -*- tab-width:2 ; indent-tabs-mode:nil -*-
//:: cases demo3a
//:: tools silicon
//:: verdict Pass

class ArraySum {
	int sum;

	context_everywhere A != null;
	context (\forall* int i; 0 <= i && i < A.length; Perm(A[i], 1/2));
	context Perm(this.sum, write);
	void sum(int[] A) {
		context_everywhere inv(Perm(this.sum, write)) { 
			par (int tid = 0 .. A.length)
				requires Perm(A[tid], 1/2);
				ensures Perm(A[tid], 1/2);
			{
				atomic(inv) {
					sum = sum + A[tid];
				}
			}
		}
	}
}
